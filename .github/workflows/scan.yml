name: scan_container

on:
  schedule:
  # Run 02:00 every monday (same as dependabot)
    - cron: "0 2 * * 1"
  workflow_dispatch:

jobs:

  scan_python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login and pull container
      run: |
        docker login elocare.azurecr.io -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}
        docker compose pull db_manager
    - name: Run Snyk to check Docker image for vulnerabilities
      # Snyk can be used to break the build when it detects vulnerabilities.
      # In this case we want to upload the issues to GitHub Code Scanning
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        # In order to use the Snyk Action you will need to have a Snyk API token.
        # More details in https://github.com/snyk/actions#getting-your-snyk-token
        # or you can signup for free at https://snyk.io/login
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: elocare.azurecr.io/db_manager:latest
        args: --file=Dockerfile --severity-threshold=high
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif


  scan_go:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login and pull container
      run: |
        docker login elocare.azurecr.io -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}
        docker compose pull datastreamdecoder
    - name: Run Snyk to check Docker image for vulnerabilities
      # Snyk can be used to break the build when it detects vulnerabilities.
      # In this case we want to upload the issues to GitHub Code Scanning
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        # In order to use the Snyk Action you will need to have a Snyk API token.
        # More details in https://github.com/snyk/actions#getting-your-snyk-token
        # or you can signup for free at https://snyk.io/login
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: elocare.azurecr.io/datastreamdecoder:latest
        args: --file=Dockerfile.go --severity-threshold=high
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif

  scan_redis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login and pull container
      run: |
        docker login elocare.azurecr.io -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}
        docker compose pull redis
    - name: Run Snyk to check Docker image for vulnerabilities
      # Snyk can be used to break the build when it detects vulnerabilities.
      # In this case we want to upload the issues to GitHub Code Scanning
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        # In order to use the Snyk Action you will need to have a Snyk API token.
        # More details in https://github.com/snyk/actions#getting-your-snyk-token
        # or you can signup for free at https://snyk.io/login
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: elocare.azurecr.io/redis:latest
        args: --file=Dockerfile.redis --severity-threshold=high
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif

  scan_db:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.0.2
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2.0.0
      with:
        sarif_file: snyk.sarif